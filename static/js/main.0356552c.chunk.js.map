{"version":3,"sources":["api/users.js","api/categories.js","components/Filters/Filters.jsx","components/ProductsTable/ProductsTable.jsx","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","Filters","selectedUser","setUser","query","setQuery","categories","setCategories","className","classNames","href","onClick","usersFromServer","map","user","type","placeholder","value","onChange","event","target","length","categoriesFromServer","category","includes","filter","sCategory","ProductsTable","products","sort","setSort","field","order","handleSortClick","product","initialProducts","categoryId","find","el","App","useState","filteredProducts","filtered","lowerCasedName","toLowerCase","lowerCasedQuery","filterProducts","sortedProducts","sorted","sortAsStrings","str1","str2","localeCompare","a","b","reverse","sortProducts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0356552c.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import classNames from 'classnames';\nimport React from 'react';\nimport usersFromServer from '../../api/users';\nimport categoriesFromServer from '../../api/categories';\n\nexport const Filters = ({\n  selectedUser,\n  setUser,\n  query,\n  setQuery,\n  categories,\n  setCategories,\n}) => {\n  const resetAll = () => {\n    setUser('all');\n    setQuery('');\n    setCategories([]);\n  };\n\n  return (\n    <div className=\"block\">\n      <nav className=\"panel\">\n        <p className=\"panel-heading\">Filters</p>\n\n        <p className=\"panel-tabs has-text-weight-bold\">\n          <a\n            className={classNames({\n              'is-active': selectedUser === 'all',\n            })}\n            data-cy=\"FilterAllUsers\"\n            href=\"#/\"\n            onClick={() => setUser('all')}\n          >\n            All\n          </a>\n\n          {usersFromServer.map(user => (\n            <a\n              className={classNames({\n                'is-active': selectedUser === user,\n              })}\n              data-cy=\"FilterUser\"\n              href=\"#/\"\n              onClick={() => setUser(user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </p>\n\n        <div className=\"panel-block\">\n          <p className=\"control has-icons-left has-icons-right\">\n            <input\n              data-cy=\"SearchField\"\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Search\"\n              value={query}\n              onChange={event => setQuery(event.target.value)}\n            />\n\n            <span className=\"icon is-left\">\n              <i className=\"fas fa-search\" aria-hidden=\"true\" />\n            </span>\n\n            <span className=\"icon is-right\">\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              {query && (\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete\"\n                  onClick={() => setQuery('')}\n                />\n              )}\n            </span>\n          </p>\n        </div>\n\n        <div className=\"panel-block is-flex-wrap-wrap\">\n          <a\n            href=\"#/\"\n            data-cy=\"AllCategories\"\n            className={classNames(\n              'button is-success mr-6',\n              { 'is-outlined': categories.length !== 0 },\n            )}\n            onClick={() => setCategories([])}\n          >\n            All\n          </a>\n\n          {categoriesFromServer.map(category => (\n            <a\n              data-cy=\"Category\"\n              className={classNames(\n                'button mr-2 my-1',\n                { 'is-info': categories.includes(category) },\n              )}\n              href=\"#/\"\n              onClick={() => {\n                if (categories.includes(category)) {\n                  setCategories(\n                    categories.filter(sCategory => category !== sCategory),\n                  );\n                } else {\n                  setCategories([...categories, category]);\n                }\n              }}\n            >\n              {category.title}\n            </a>\n          ))}\n        </div>\n\n        <div className=\"panel-block\">\n          <a\n            data-cy=\"ResetAllButton\"\n            href=\"#/\"\n            className=\"button is-link is-outlined is-fullwidth\"\n            onClick={resetAll}\n          >\n            Reset all filters\n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport const ProductsTable = ({ products, sort, setSort }) => {\n  const { field, order } = sort;\n\n  const handleSortClick = (title) => {\n    if (field === title && order === 'asc') {\n      setSort({ ...sort, order: 'desc' });\n    } else if (field === title && order === 'desc') {\n      setSort({ field: '', order: 'asc' });\n    } else {\n      setSort({ field: title, order: 'asc' });\n    }\n  };\n\n  return (\n    <table\n      data-cy=\"ProductTable\"\n      className=\"table is-striped is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {['ID', 'Product', 'Category', 'User'].map(title => (\n            <th key={title}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {title}\n\n                <a\n                  href=\"#/\"\n                  onClick={() => handleSortClick(title)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      data-cy=\"SortIcon\"\n                      className={classNames(\n                        'fas',\n                        {\n                          'fa-sort': field !== title,\n                          'fa-sort-up': title === field && order === 'asc',\n                          'fa-sort-down': title === field && order === 'desc',\n                        },\n                      )}\n                    />\n                  </span>\n                </a>\n              </span>\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {products.map((product) => {\n          const { id, name, category: { icon, title }, user } = product;\n\n          return (\n            <tr data-cy=\"Product\" key={id}>\n              <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                {id}\n              </td>\n\n              <td data-cy=\"ProductName\">\n                {name}\n              </td>\n              <td data-cy=\"ProductCategory\">\n                {`${icon} - ${title}`}\n              </td>\n\n              <td\n                data-cy=\"ProductUser\"\n                className={classNames(\n                  'has-text-link',\n                  {\n                    'has-text-link': user.sex === 'm',\n                    'has-text-danger': user.sex === 'f',\n                  },\n                )}\n              >\n                {user.name}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Filters } from './components/Filters';\nimport { ProductsTable } from './components/ProductsTable';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst initialProducts = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(el => el.id === product.categoryId);\n\n  const user = usersFromServer.find(el => el.id === category.ownerId);\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nconst filterProducts = (products, selectedUser, query, categories) => {\n  let filtered = [...products];\n\n  if (selectedUser !== 'all') {\n    filtered = filtered.filter(product => product.user === selectedUser);\n  }\n\n  if (categories.length > 0) {\n    filtered = filtered\n      .filter(product => categories.includes(product.category));\n  }\n\n  return filtered.filter((product) => {\n    const lowerCasedName = product.name.toLowerCase();\n    const lowerCasedQuery = query.toLowerCase();\n\n    return (\n      lowerCasedName.includes(lowerCasedQuery)\n    );\n  });\n};\n\nconst sortProducts = (filteredProducts, sort) => {\n  const sorted = [...filteredProducts];\n\n  const sortAsStrings = (str1, str2) => (\n    str1.localeCompare(str2)\n  );\n\n  switch (sort.field) {\n    case 'ID':\n      sorted.sort((a, b) => a.id - b.id);\n      break;\n\n    case 'Product':\n      sorted.sort((a, b) => sortAsStrings(a.name, b.name));\n      break;\n\n    case 'Category':\n      sorted.sort((a, b) => sortAsStrings(a.category.title, b.category.title));\n      break;\n\n    case 'User':\n      sorted.sort((a, b) => sortAsStrings(a.user.name, b.user.name));\n      break;\n\n    default:\n      break;\n  }\n\n  if (sort.order === 'desc') {\n    return sorted.reverse();\n  }\n\n  return sorted;\n};\n\nexport const App = () => {\n  const [user, setUser] = useState('all');\n  const [query, setQuery] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [sort, setSort] = useState({ field: '', order: 'asc' });\n\n  const filteredProducts = filterProducts(\n    initialProducts,\n    user,\n    query,\n    categories,\n  );\n\n  const sortedProducts = sortProducts(filteredProducts, sort);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <Filters\n          selectedUser={user}\n          setUser={setUser}\n          query={query}\n          setQuery={setQuery}\n          categories={categories}\n          setCategories={setCategories}\n        />\n\n        <div className=\"box table-container\">\n          {filteredProducts.length > 0\n            ? (\n              <ProductsTable\n                products={sortedProducts}\n                sort={sort}\n                setSort={setSort}\n              />\n            )\n            : (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}